apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: clue/json-server
        volumeMounts:
          - name: data
            mountPath: data
            readOnly: true
        command:
          - json-server
          - --port
          - "8080"
          - server.json
        livenessProbe:
          httpGet:
            path: /users
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
      - name: airbag
        image: airbag
        imagePullPolicy: Never
        env:
          - name: AIRBAG_CONFIG_NAME
            value: airbag-config
          - name: AIRBAG_CONFIG_PATH
            value: /app/data
        volumeMounts:
          - name: data
            mountPath: /app/data/airbag-config.json
            subPath: airbag-config.json
            readOnly: true
      volumes:
        - name: data
          configMap:
            name: user-service
---
kind: Service
apiVersion: v1
metadata:
  name: user-service
spec:
  selector:
    app: user-service
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service
data:
  server.json: |
        {
          "authenticated": {
            "data": "Welcome to secured route!"
          },
          "unauthenticated": {
            "data": "Welcome to public route!"
          }
        }
  airbag-config.json: |
        {
          "BackendServicePort": "8080",
          "JWTProviders": [
              {
                  "iss": "http://oidc-server-mock",
                  "aud": "user-service-scope"
              }
            ],
            "UnauthenticatedRoutes": [
                "/health",
                "/unauthenticated"
            ]
        }
---
